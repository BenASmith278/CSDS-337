Terminals unused in grammar

    VARIADIC


State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decList
    2        | ε

    3 decList: decList dec
    4        | dec

    5 dec: funDef
    6    | funDec

    7 type: INT_TYPE
    8     | FLOAT_TYPE
    9     | STRING_TYPE
   10     | BOOL_TYPE
   11     | VOID_TYPE

   12 varDec: type id

   13 varDecs: varDecs varDec SEMICOLON
   14        | ε

   15 funDec: type id LPAREN params RPAREN SEMICOLON

   16 funDef: type id LPAREN params RPAREN LBRACE varDecs stmts RBRACE

   17 params: paramList
   18       | ε

   19 paramList: paramList COMMA type id
   20          | type id

   21 stmt: exprStmt
   22     | LBRACE stmts RBRACE
   23     | selStmt
   24     | iterStmt
   25     | jumpStmt

   26 exprStmt: expr SEMICOLON
   27         | SEMICOLON

   28 stmts: stmts stmt
   29      | ε

   30 selStmt: IF LPAREN expr RPAREN stmt ELSE stmt
   31        | IF LPAREN expr RPAREN stmt

   32 iterStmt: WHILE LPAREN expr RPAREN stmt

   33 jumpStmt: BREAK SEMICOLON
   34         | RETURN SEMICOLON
   35         | RETURN expr SEMICOLON

   36 expr: orExpr
   37     | id EQUALS_SIGN expr

   38 orExpr: andExpr
   39       | orExpr OR andExpr

   40 andExpr: unaryRelExpr
   41        | andExpr AND unaryRelExpr

   42 unaryRelExpr: NOT unaryRelExpr
   43             | relExpr

   44 relExpr: term relop term
   45        | term

   46 relop: GT
   47      | LT
   48      | GE
   49      | LE
   50      | EE
   51      | NE

   52 term: factor
   53     | term ARITH_PLUS factor
   54     | term ARITH_MINUS factor

   55 factor: primary
   56       | factor ARITH_TIMES primary
   57       | factor ARITH_DIV primary
   58       | factor ARITH_MOD primary

   59 primary: id
   60        | LPAREN expr RPAREN
   61        | call
   62        | constant

   63 call: id LPAREN args RPAREN
   64     | id LPAREN RPAREN

   65 args: args COMMA expr
   66     | expr

   67 constant: int_lit
   68         | flt_lit
   69         | str_lit
   70         | bool_lit

   71 int_lit: INT_LITERAL
   72        | ARITH_MINUS INT_LITERAL

   73 flt_lit: FLOAT_LITERAL
   74        | ARITH_MINUS FLOAT_LITERAL

   75 str_lit: STRING_LITERAL

   76 bool_lit: BOOL_LITERAL

   77 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <strval> (258) 77
    INT_TYPE (259) 7
    FLOAT_TYPE (260) 8
    STRING_TYPE (261) 9
    BOOL_TYPE (262) 10
    VOID_TYPE (263) 11
    SEMICOLON (264) 13 15 26 27 33 34 35
    IF (265) 30 31
    ELSE (266) 30
    WHILE (267) 32
    BREAK (268) 33
    RETURN (269) 34 35
    EQUALS_SIGN (270) 37
    VARIADIC (271)
    INT_LITERAL <intval> (272) 71 72
    STRING_LITERAL <strval> (273) 75
    FLOAT_LITERAL <fltval> (274) 73 74
    BOOL_LITERAL <boolval> (275) 76
    LPAREN (276) 15 16 30 31 32 60 63 64
    RPAREN (277) 15 16 30 31 32 60 63 64
    LBRACE (278) 16 22
    RBRACE (279) 16 22
    ARITH_MINUS (280) 54 72 74
    ARITH_PLUS (281) 53
    ARITH_TIMES (282) 56
    ARITH_DIV (283) 57
    ARITH_MOD (284) 58
    LT (285) 47
    GT (286) 46
    LE (287) 49
    GE (288) 48
    EE (289) 50
    NE (290) 51
    COMMA (291) 19 65
    OR (292) 39
    AND (293) 41
    NOT (294) 42


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program (41)
        on left: 1 2
        on right: 0
    decList <nodeval> (42)
        on left: 3 4
        on right: 1 3
    dec <nodeval> (43)
        on left: 5 6
        on right: 3 4
    type <nodeval> (44)
        on left: 7 8 9 10 11
        on right: 12 15 16 19 20
    varDec <nodeval> (45)
        on left: 12
        on right: 13
    varDecs <nodeval> (46)
        on left: 13 14
        on right: 13 16
    funDec <nodeval> (47)
        on left: 15
        on right: 6
    funDef <nodeval> (48)
        on left: 16
        on right: 5
    params <nodeval> (49)
        on left: 17 18
        on right: 15 16
    paramList <nodeval> (50)
        on left: 19 20
        on right: 17 19
    stmt <nodeval> (51)
        on left: 21 22 23 24 25
        on right: 28 30 31 32
    exprStmt <nodeval> (52)
        on left: 26 27
        on right: 21
    stmts <nodeval> (53)
        on left: 28 29
        on right: 16 22 28
    selStmt <nodeval> (54)
        on left: 30 31
        on right: 23
    iterStmt <nodeval> (55)
        on left: 32
        on right: 24
    jumpStmt <nodeval> (56)
        on left: 33 34 35
        on right: 25
    expr <nodeval> (57)
        on left: 36 37
        on right: 26 30 31 32 35 37 60 65 66
    orExpr <nodeval> (58)
        on left: 38 39
        on right: 36 39
    andExpr <nodeval> (59)
        on left: 40 41
        on right: 38 39 41
    unaryRelExpr <nodeval> (60)
        on left: 42 43
        on right: 40 41 42
    relExpr <nodeval> (61)
        on left: 44 45
        on right: 43
    relop <nodeval> (62)
        on left: 46 47 48 49 50 51
        on right: 44
    term <nodeval> (63)
        on left: 52 53 54
        on right: 44 45 53 54
    factor <nodeval> (64)
        on left: 55 56 57 58
        on right: 52 53 54 56 57 58
    primary <nodeval> (65)
        on left: 59 60 61 62
        on right: 55 56 57 58
    call <nodeval> (66)
        on left: 63 64
        on right: 61
    args <nodeval> (67)
        on left: 65 66
        on right: 63 65
    constant <nodeval> (68)
        on left: 67 68 69 70
        on right: 62
    int_lit <intval> (69)
        on left: 71 72
        on right: 67
    flt_lit <fltval> (70)
        on left: 73 74
        on right: 68
    str_lit <strval> (71)
        on left: 75
        on right: 69
    bool_lit <boolval> (72)
        on left: 76
        on right: 70
    id <nodeval> (73)
        on left: 77
        on right: 12 15 16 19 20 37 59 63 64


State 0

    0 $accept: • program $end

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    STRING_TYPE  shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID_TYPE    shift, and go to state 5

    $default  reduce using rule 2 (program)

    program  go to state 6
    decList  go to state 7
    dec      go to state 8
    type     go to state 9
    funDec   go to state 10
    funDef   go to state 11


State 1

    7 type: INT_TYPE •

    $default  reduce using rule 7 (type)


State 2

    8 type: FLOAT_TYPE •

    $default  reduce using rule 8 (type)


State 3

    9 type: STRING_TYPE •

    $default  reduce using rule 9 (type)


State 4

   10 type: BOOL_TYPE •

    $default  reduce using rule 10 (type)


State 5

   11 type: VOID_TYPE •

    $default  reduce using rule 11 (type)


State 6

    0 $accept: program • $end

    $end  shift, and go to state 12


State 7

    1 program: decList •
    3 decList: decList • dec

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    STRING_TYPE  shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID_TYPE    shift, and go to state 5

    $default  reduce using rule 1 (program)

    dec     go to state 13
    type    go to state 9
    funDec  go to state 10
    funDef  go to state 11


State 8

    4 decList: dec •

    $default  reduce using rule 4 (decList)


State 9

   15 funDec: type • id LPAREN params RPAREN SEMICOLON
   16 funDef: type • id LPAREN params RPAREN LBRACE varDecs stmts RBRACE

    ID  shift, and go to state 14

    id  go to state 15


State 10

    6 dec: funDec •

    $default  reduce using rule 6 (dec)


State 11

    5 dec: funDef •

    $default  reduce using rule 5 (dec)


State 12

    0 $accept: program $end •

    $default  accept


State 13

    3 decList: decList dec •

    $default  reduce using rule 3 (decList)


State 14

   77 id: ID •

    $default  reduce using rule 77 (id)


State 15

   15 funDec: type id • LPAREN params RPAREN SEMICOLON
   16 funDef: type id • LPAREN params RPAREN LBRACE varDecs stmts RBRACE

    LPAREN  shift, and go to state 16


State 16

   15 funDec: type id LPAREN • params RPAREN SEMICOLON
   16 funDef: type id LPAREN • params RPAREN LBRACE varDecs stmts RBRACE

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    STRING_TYPE  shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID_TYPE    shift, and go to state 5

    $default  reduce using rule 18 (params)

    type       go to state 17
    params     go to state 18
    paramList  go to state 19


State 17

   20 paramList: type • id

    ID  shift, and go to state 14

    id  go to state 20


State 18

   15 funDec: type id LPAREN params • RPAREN SEMICOLON
   16 funDef: type id LPAREN params • RPAREN LBRACE varDecs stmts RBRACE

    RPAREN  shift, and go to state 21


State 19

   17 params: paramList •
   19 paramList: paramList • COMMA type id

    COMMA  shift, and go to state 22

    $default  reduce using rule 17 (params)


State 20

   20 paramList: type id •

    $default  reduce using rule 20 (paramList)


State 21

   15 funDec: type id LPAREN params RPAREN • SEMICOLON
   16 funDef: type id LPAREN params RPAREN • LBRACE varDecs stmts RBRACE

    SEMICOLON  shift, and go to state 23
    LBRACE     shift, and go to state 24


State 22

   19 paramList: paramList COMMA • type id

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    STRING_TYPE  shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID_TYPE    shift, and go to state 5

    type  go to state 25


State 23

   15 funDec: type id LPAREN params RPAREN SEMICOLON •

    $default  reduce using rule 15 (funDec)


State 24

   16 funDef: type id LPAREN params RPAREN LBRACE • varDecs stmts RBRACE

    $default  reduce using rule 14 (varDecs)

    varDecs  go to state 26


State 25

   19 paramList: paramList COMMA type • id

    ID  shift, and go to state 14

    id  go to state 27


State 26

   13 varDecs: varDecs • varDec SEMICOLON
   16 funDef: type id LPAREN params RPAREN LBRACE varDecs • stmts RBRACE

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    STRING_TYPE  shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID_TYPE    shift, and go to state 5

    $default  reduce using rule 29 (stmts)

    type    go to state 28
    varDec  go to state 29
    stmts   go to state 30


State 27

   19 paramList: paramList COMMA type id •

    $default  reduce using rule 19 (paramList)


State 28

   12 varDec: type • id

    ID  shift, and go to state 14

    id  go to state 31


State 29

   13 varDecs: varDecs varDec • SEMICOLON

    SEMICOLON  shift, and go to state 32


State 30

   16 funDef: type id LPAREN params RPAREN LBRACE varDecs stmts • RBRACE
   28 stmts: stmts • stmt

    ID              shift, and go to state 14
    SEMICOLON       shift, and go to state 33
    IF              shift, and go to state 34
    WHILE           shift, and go to state 35
    BREAK           shift, and go to state 36
    RETURN          shift, and go to state 37
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    LBRACE          shift, and go to state 43
    RBRACE          shift, and go to state 44
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    stmt          go to state 47
    exprStmt      go to state 48
    selStmt       go to state 49
    iterStmt      go to state 50
    jumpStmt      go to state 51
    expr          go to state 52
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 31

   12 varDec: type id •

    $default  reduce using rule 12 (varDec)


State 32

   13 varDecs: varDecs varDec SEMICOLON •

    $default  reduce using rule 13 (varDecs)


State 33

   27 exprStmt: SEMICOLON •

    $default  reduce using rule 27 (exprStmt)


State 34

   30 selStmt: IF • LPAREN expr RPAREN stmt ELSE stmt
   31        | IF • LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 67


State 35

   32 iterStmt: WHILE • LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 68


State 36

   33 jumpStmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 69


State 37

   34 jumpStmt: RETURN • SEMICOLON
   35         | RETURN • expr SEMICOLON

    ID              shift, and go to state 14
    SEMICOLON       shift, and go to state 70
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    expr          go to state 71
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 38

   71 int_lit: INT_LITERAL •

    $default  reduce using rule 71 (int_lit)


State 39

   75 str_lit: STRING_LITERAL •

    $default  reduce using rule 75 (str_lit)


State 40

   73 flt_lit: FLOAT_LITERAL •

    $default  reduce using rule 73 (flt_lit)


State 41

   76 bool_lit: BOOL_LITERAL •

    $default  reduce using rule 76 (bool_lit)


State 42

   60 primary: LPAREN • expr RPAREN

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    expr          go to state 72
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 43

   22 stmt: LBRACE • stmts RBRACE

    $default  reduce using rule 29 (stmts)

    stmts  go to state 73


State 44

   16 funDef: type id LPAREN params RPAREN LBRACE varDecs stmts RBRACE •

    $default  reduce using rule 16 (funDef)


State 45

   72 int_lit: ARITH_MINUS • INT_LITERAL
   74 flt_lit: ARITH_MINUS • FLOAT_LITERAL

    INT_LITERAL    shift, and go to state 74
    FLOAT_LITERAL  shift, and go to state 75


State 46

   42 unaryRelExpr: NOT • unaryRelExpr

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    unaryRelExpr  go to state 76
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 77


State 47

   28 stmts: stmts stmt •

    $default  reduce using rule 28 (stmts)


State 48

   21 stmt: exprStmt •

    $default  reduce using rule 21 (stmt)


State 49

   23 stmt: selStmt •

    $default  reduce using rule 23 (stmt)


State 50

   24 stmt: iterStmt •

    $default  reduce using rule 24 (stmt)


State 51

   25 stmt: jumpStmt •

    $default  reduce using rule 25 (stmt)


State 52

   26 exprStmt: expr • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 53

   36 expr: orExpr •
   39 orExpr: orExpr • OR andExpr

    OR  shift, and go to state 79

    $default  reduce using rule 36 (expr)


State 54

   38 orExpr: andExpr •
   41 andExpr: andExpr • AND unaryRelExpr

    AND  shift, and go to state 80

    $default  reduce using rule 38 (orExpr)


State 55

   40 andExpr: unaryRelExpr •

    $default  reduce using rule 40 (andExpr)


State 56

   43 unaryRelExpr: relExpr •

    $default  reduce using rule 43 (unaryRelExpr)


State 57

   44 relExpr: term • relop term
   45        | term •
   53 term: term • ARITH_PLUS factor
   54     | term • ARITH_MINUS factor

    ARITH_MINUS  shift, and go to state 81
    ARITH_PLUS   shift, and go to state 82
    LT           shift, and go to state 83
    GT           shift, and go to state 84
    LE           shift, and go to state 85
    GE           shift, and go to state 86
    EE           shift, and go to state 87
    NE           shift, and go to state 88

    $default  reduce using rule 45 (relExpr)

    relop  go to state 89


State 58

   52 term: factor •
   56 factor: factor • ARITH_TIMES primary
   57       | factor • ARITH_DIV primary
   58       | factor • ARITH_MOD primary

    ARITH_TIMES  shift, and go to state 90
    ARITH_DIV    shift, and go to state 91
    ARITH_MOD    shift, and go to state 92

    $default  reduce using rule 52 (term)


State 59

   55 factor: primary •

    $default  reduce using rule 55 (factor)


State 60

   61 primary: call •

    $default  reduce using rule 61 (primary)


State 61

   62 primary: constant •

    $default  reduce using rule 62 (primary)


State 62

   67 constant: int_lit •

    $default  reduce using rule 67 (constant)


State 63

   68 constant: flt_lit •

    $default  reduce using rule 68 (constant)


State 64

   69 constant: str_lit •

    $default  reduce using rule 69 (constant)


State 65

   70 constant: bool_lit •

    $default  reduce using rule 70 (constant)


State 66

   37 expr: id • EQUALS_SIGN expr
   59 primary: id •
   63 call: id • LPAREN args RPAREN
   64     | id • LPAREN RPAREN

    EQUALS_SIGN  shift, and go to state 93
    LPAREN       shift, and go to state 94

    $default  reduce using rule 59 (primary)


State 67

   30 selStmt: IF LPAREN • expr RPAREN stmt ELSE stmt
   31        | IF LPAREN • expr RPAREN stmt

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    expr          go to state 95
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 68

   32 iterStmt: WHILE LPAREN • expr RPAREN stmt

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    expr          go to state 96
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 69

   33 jumpStmt: BREAK SEMICOLON •

    $default  reduce using rule 33 (jumpStmt)


State 70

   34 jumpStmt: RETURN SEMICOLON •

    $default  reduce using rule 34 (jumpStmt)


State 71

   35 jumpStmt: RETURN expr • SEMICOLON

    SEMICOLON  shift, and go to state 97


State 72

   60 primary: LPAREN expr • RPAREN

    RPAREN  shift, and go to state 98


State 73

   22 stmt: LBRACE stmts • RBRACE
   28 stmts: stmts • stmt

    ID              shift, and go to state 14
    SEMICOLON       shift, and go to state 33
    IF              shift, and go to state 34
    WHILE           shift, and go to state 35
    BREAK           shift, and go to state 36
    RETURN          shift, and go to state 37
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    LBRACE          shift, and go to state 43
    RBRACE          shift, and go to state 99
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    stmt          go to state 47
    exprStmt      go to state 48
    selStmt       go to state 49
    iterStmt      go to state 50
    jumpStmt      go to state 51
    expr          go to state 52
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 74

   72 int_lit: ARITH_MINUS INT_LITERAL •

    $default  reduce using rule 72 (int_lit)


State 75

   74 flt_lit: ARITH_MINUS FLOAT_LITERAL •

    $default  reduce using rule 74 (flt_lit)


State 76

   42 unaryRelExpr: NOT unaryRelExpr •

    $default  reduce using rule 42 (unaryRelExpr)


State 77

   59 primary: id •
   63 call: id • LPAREN args RPAREN
   64     | id • LPAREN RPAREN

    LPAREN  shift, and go to state 94

    $default  reduce using rule 59 (primary)


State 78

   26 exprStmt: expr SEMICOLON •

    $default  reduce using rule 26 (exprStmt)


State 79

   39 orExpr: orExpr OR • andExpr

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    andExpr       go to state 100
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 77


State 80

   41 andExpr: andExpr AND • unaryRelExpr

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    unaryRelExpr  go to state 101
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 77


State 81

   54 term: term ARITH_MINUS • factor

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45

    factor    go to state 102
    primary   go to state 59
    call      go to state 60
    constant  go to state 61
    int_lit   go to state 62
    flt_lit   go to state 63
    str_lit   go to state 64
    bool_lit  go to state 65
    id        go to state 77


State 82

   53 term: term ARITH_PLUS • factor

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45

    factor    go to state 103
    primary   go to state 59
    call      go to state 60
    constant  go to state 61
    int_lit   go to state 62
    flt_lit   go to state 63
    str_lit   go to state 64
    bool_lit  go to state 65
    id        go to state 77


State 83

   47 relop: LT •

    $default  reduce using rule 47 (relop)


State 84

   46 relop: GT •

    $default  reduce using rule 46 (relop)


State 85

   49 relop: LE •

    $default  reduce using rule 49 (relop)


State 86

   48 relop: GE •

    $default  reduce using rule 48 (relop)


State 87

   50 relop: EE •

    $default  reduce using rule 50 (relop)


State 88

   51 relop: NE •

    $default  reduce using rule 51 (relop)


State 89

   44 relExpr: term relop • term

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45

    term      go to state 104
    factor    go to state 58
    primary   go to state 59
    call      go to state 60
    constant  go to state 61
    int_lit   go to state 62
    flt_lit   go to state 63
    str_lit   go to state 64
    bool_lit  go to state 65
    id        go to state 77


State 90

   56 factor: factor ARITH_TIMES • primary

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45

    primary   go to state 105
    call      go to state 60
    constant  go to state 61
    int_lit   go to state 62
    flt_lit   go to state 63
    str_lit   go to state 64
    bool_lit  go to state 65
    id        go to state 77


State 91

   57 factor: factor ARITH_DIV • primary

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45

    primary   go to state 106
    call      go to state 60
    constant  go to state 61
    int_lit   go to state 62
    flt_lit   go to state 63
    str_lit   go to state 64
    bool_lit  go to state 65
    id        go to state 77


State 92

   58 factor: factor ARITH_MOD • primary

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45

    primary   go to state 107
    call      go to state 60
    constant  go to state 61
    int_lit   go to state 62
    flt_lit   go to state 63
    str_lit   go to state 64
    bool_lit  go to state 65
    id        go to state 77


State 93

   37 expr: id EQUALS_SIGN • expr

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    expr          go to state 108
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 94

   63 call: id LPAREN • args RPAREN
   64     | id LPAREN • RPAREN

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    RPAREN          shift, and go to state 109
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    expr          go to state 110
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    args          go to state 111
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 95

   30 selStmt: IF LPAREN expr • RPAREN stmt ELSE stmt
   31        | IF LPAREN expr • RPAREN stmt

    RPAREN  shift, and go to state 112


State 96

   32 iterStmt: WHILE LPAREN expr • RPAREN stmt

    RPAREN  shift, and go to state 113


State 97

   35 jumpStmt: RETURN expr SEMICOLON •

    $default  reduce using rule 35 (jumpStmt)


State 98

   60 primary: LPAREN expr RPAREN •

    $default  reduce using rule 60 (primary)


State 99

   22 stmt: LBRACE stmts RBRACE •

    $default  reduce using rule 22 (stmt)


State 100

   39 orExpr: orExpr OR andExpr •
   41 andExpr: andExpr • AND unaryRelExpr

    AND  shift, and go to state 80

    $default  reduce using rule 39 (orExpr)


State 101

   41 andExpr: andExpr AND unaryRelExpr •

    $default  reduce using rule 41 (andExpr)


State 102

   54 term: term ARITH_MINUS factor •
   56 factor: factor • ARITH_TIMES primary
   57       | factor • ARITH_DIV primary
   58       | factor • ARITH_MOD primary

    ARITH_TIMES  shift, and go to state 90
    ARITH_DIV    shift, and go to state 91
    ARITH_MOD    shift, and go to state 92

    $default  reduce using rule 54 (term)


State 103

   53 term: term ARITH_PLUS factor •
   56 factor: factor • ARITH_TIMES primary
   57       | factor • ARITH_DIV primary
   58       | factor • ARITH_MOD primary

    ARITH_TIMES  shift, and go to state 90
    ARITH_DIV    shift, and go to state 91
    ARITH_MOD    shift, and go to state 92

    $default  reduce using rule 53 (term)


State 104

   44 relExpr: term relop term •
   53 term: term • ARITH_PLUS factor
   54     | term • ARITH_MINUS factor

    ARITH_MINUS  shift, and go to state 81
    ARITH_PLUS   shift, and go to state 82

    $default  reduce using rule 44 (relExpr)


State 105

   56 factor: factor ARITH_TIMES primary •

    $default  reduce using rule 56 (factor)


State 106

   57 factor: factor ARITH_DIV primary •

    $default  reduce using rule 57 (factor)


State 107

   58 factor: factor ARITH_MOD primary •

    $default  reduce using rule 58 (factor)


State 108

   37 expr: id EQUALS_SIGN expr •

    $default  reduce using rule 37 (expr)


State 109

   64 call: id LPAREN RPAREN •

    $default  reduce using rule 64 (call)


State 110

   66 args: expr •

    $default  reduce using rule 66 (args)


State 111

   63 call: id LPAREN args • RPAREN
   65 args: args • COMMA expr

    RPAREN  shift, and go to state 114
    COMMA   shift, and go to state 115


State 112

   30 selStmt: IF LPAREN expr RPAREN • stmt ELSE stmt
   31        | IF LPAREN expr RPAREN • stmt

    ID              shift, and go to state 14
    SEMICOLON       shift, and go to state 33
    IF              shift, and go to state 34
    WHILE           shift, and go to state 35
    BREAK           shift, and go to state 36
    RETURN          shift, and go to state 37
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    LBRACE          shift, and go to state 43
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    stmt          go to state 116
    exprStmt      go to state 48
    selStmt       go to state 49
    iterStmt      go to state 50
    jumpStmt      go to state 51
    expr          go to state 52
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 113

   32 iterStmt: WHILE LPAREN expr RPAREN • stmt

    ID              shift, and go to state 14
    SEMICOLON       shift, and go to state 33
    IF              shift, and go to state 34
    WHILE           shift, and go to state 35
    BREAK           shift, and go to state 36
    RETURN          shift, and go to state 37
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    LBRACE          shift, and go to state 43
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    stmt          go to state 117
    exprStmt      go to state 48
    selStmt       go to state 49
    iterStmt      go to state 50
    jumpStmt      go to state 51
    expr          go to state 52
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 114

   63 call: id LPAREN args RPAREN •

    $default  reduce using rule 63 (call)


State 115

   65 args: args COMMA • expr

    ID              shift, and go to state 14
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    expr          go to state 118
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 116

   30 selStmt: IF LPAREN expr RPAREN stmt • ELSE stmt
   31        | IF LPAREN expr RPAREN stmt •

    ELSE  shift, and go to state 119

    ELSE      [reduce using rule 31 (selStmt)]
    $default  reduce using rule 31 (selStmt)


State 117

   32 iterStmt: WHILE LPAREN expr RPAREN stmt •

    $default  reduce using rule 32 (iterStmt)


State 118

   65 args: args COMMA expr •

    $default  reduce using rule 65 (args)


State 119

   30 selStmt: IF LPAREN expr RPAREN stmt ELSE • stmt

    ID              shift, and go to state 14
    SEMICOLON       shift, and go to state 33
    IF              shift, and go to state 34
    WHILE           shift, and go to state 35
    BREAK           shift, and go to state 36
    RETURN          shift, and go to state 37
    INT_LITERAL     shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    FLOAT_LITERAL   shift, and go to state 40
    BOOL_LITERAL    shift, and go to state 41
    LPAREN          shift, and go to state 42
    LBRACE          shift, and go to state 43
    ARITH_MINUS     shift, and go to state 45
    NOT             shift, and go to state 46

    stmt          go to state 120
    exprStmt      go to state 48
    selStmt       go to state 49
    iterStmt      go to state 50
    jumpStmt      go to state 51
    expr          go to state 52
    orExpr        go to state 53
    andExpr       go to state 54
    unaryRelExpr  go to state 55
    relExpr       go to state 56
    term          go to state 57
    factor        go to state 58
    primary       go to state 59
    call          go to state 60
    constant      go to state 61
    int_lit       go to state 62
    flt_lit       go to state 63
    str_lit       go to state 64
    bool_lit      go to state 65
    id            go to state 66


State 120

   30 selStmt: IF LPAREN expr RPAREN stmt ELSE stmt •

    $default  reduce using rule 30 (selStmt)
